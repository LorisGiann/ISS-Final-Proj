/* Generated by AN DISI Unibo */ 
package it.unibo.test_component

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Test_component ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						discardMessages = true
						emit("myMsg2", "myMsg2(off)" ) 
						emit("myMsg2", "myMsg2(off)" ) 
						delay(200) 
						emit("myMsg1", "myMsg1(off)" ) 
						delay(200) 
					}
				}	 
			}
		}
}
