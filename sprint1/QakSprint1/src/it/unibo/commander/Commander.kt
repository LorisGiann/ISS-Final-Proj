/* Generated by AN DISI Unibo */ 
package it.unibo.commander

import it.unibo.kactor.*
import alice.tuprolog.*
import kotlinx.coroutines.CoroutineScope
import kotlinx.coroutines.delay
import kotlinx.coroutines.launch
import kotlinx.coroutines.runBlocking
	
class Commander ( name: String, scope: CoroutineScope  ) : ActorBasicFsm( name, scope ){

	override fun getInitialState() : String{
		return "s0"
	}
	override fun getBody() : (ActorBasicFsm.() -> Unit){
		return { //this:ActionBasciFsm
				state("s0") { //this:State
					action { //it:State
						forward("cmd", "cmd(w)" ,"basicrobot" ) 
					}
					 transition(edgeName="t00",targetState="s1",cond=whenEvent("info"))
				}	 
				state("s1") { //this:State
					action { //it:State
						forward("cmd", "cmd(l)" ,"basicrobot" ) 
						forward("cmd", "cmd(w)" ,"basicrobot" ) 
					}
					 transition(edgeName="t01",targetState="s2",cond=whenEvent("info"))
				}	 
				state("s2") { //this:State
					action { //it:State
						forward("cmd", "cmd(l)" ,"basicrobot" ) 
						forward("cmd", "cmd(w)" ,"basicrobot" ) 
						println("done")
					}
				}	 
			}
		}
}
