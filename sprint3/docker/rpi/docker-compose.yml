version: "3.3"
services:
  serverctx:
    #platform: linux/amd64
    image: ${IP}:5000/serverctx
    #image: serverctx
    build:
      context: ../../
      dockerfile: docker/rpi/Dockerfile-serverctx
    container_name: serverctx
    #network_mode: "host"
    networks:
      - wasteservicenet
    depends_on:
      - "wenv"
    ports:
      - "0.0.0.0:8095:8095/tcp"
      - "0.0.0.0:8095:8095/udp"
    deploy:
      mode: global
      # placement: 
      #   constraints: 
      #     - "node.labels.rpi!=yes"
  robotctx:
    #platform: linux/amd64
    image: ${IP}:5000/robotctx
    #image: robotctx
    build:
      context: ../../
      dockerfile: docker/rpi/Dockerfile-robotctx
    container_name: robotctx
    #network_mode: "host"
    networks:
      - wasteservicenet
    ports:
      - "0.0.0.0:8096:8096/tcp"
      - "0.0.0.0:8096:8096/udp"
    deploy:
      mode: global
      # placement: 
      #   constraints: 
      #     - "node.labels.rpi!=yes"
  wenv:
    #platform: linux/amd64
    image: ${IP}:5000/wenvdf
    #image: wenvdf
    build:
      context: ../../../it.unibo.virtualRobot2020/
    container_name: "wenvdf"
    #network_mode: "host"
    networks:
      - wasteservicenet
    ports:
      #- "8090:8090"
      - "0.0.0.0:8090:8090/tcp"
      - "0.0.0.0:8090:8090/udp"
      - "8091:8091"
    deploy:
      mode: global
      # placement: 
      #   constraints: 
      #     - "node.labels.rpi!=yes"
  guiwebserver:
    #platform: linux/amd64
    image: ${IP}:5000/guiwebserver
    build:
      context: ../../
      dockerfile: docker/local/Dockerfile-guiwebserver
    container_name: "guiwebserver"
    #network_mode: "host"
    networks:
      - wasteservicenet
    ports:
      - "0.0.0.0:8089:8089/tcp"
      - "0.0.0.0:8089:8089/udp"
    deploy:
      mode: global
      # placement: 
      #   constraints: 
      #     - "node.labels.rpi!=yes"
networks:
  wasteservicenet:
    driver: overlay
    attachable: true
    #ipam:
    #  config:
    #    - subnet: 192.168.18.0/24
